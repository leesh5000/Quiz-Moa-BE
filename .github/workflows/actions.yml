name: Deploy to Amazon EC2

on:
  push:
    branches:
      - main

# 본인이 설정한 값을 여기서 채워넣습니다.
# 리전, 버킷 이름, CodeDeploy 앱 이름, CodeDeploy 배포 그룹 이름
env:
  AWS_REGION: ap-northeast-2
  S3_BUCKET_NAME: quiz-github-actions-s3-bucket
  CODE_DEPLOY_APPLICATION_NAME: quiz-code-deploy
  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: quiz-deployment-group

permissions:
  contents: read

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    # 1. Git Repository Checkout
    - name: Checkout
      uses: actions/checkout@v3

    # 2. Set up JDK
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'corretto'
        java-version: '17'

    # 3. Create MessageProperties
    - name: Create MessageProperties
      run: |
        echo "root directory"
        echo -e "`ls -al`"
        cd ./src/main/resource
        echo "resource directory"
        echo -e "`ls -al`"
        mkdir -p ./src/main/resource/messages 
        cd ./src/main/resource/messages
        echo "message directory"
        echo -e "`ls -al`"
        touch ./messages_ko_KR.properties
        echo ${{ secrets.MESSAGE_PROPERTIES }} > ./messages_ko_KR.properties
        cat ./messages_ko_KR.properties
      shell: bash

    # 4. Gradle Build
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      shell: bash

    - name: Build with Gradle
      run: ./gradlew clean build
      shell: bash

#     # (4) AWS 인증 (IAM 사용자 Access Key, Secret Key 활용)
#     - name: Configure AWS credentials
#       uses: aws-actions/configure-aws-credentials@v1
#       with:
#         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#         aws-secret-access-key: ${{ secrets.AWS_ACCESS_KEY_SECRET }}
#         aws-region: ${{ env.AWS_REGION }}

#     # (5) 빌드 결과물을 S3 버킷에 업로드
#     - name: Upload to AWS S3
#       run: |
#         aws deploy push \
#           --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
#           --ignore-hidden-files \
#           --s3-location s3://$S3_BUCKET_NAME/$GITHUB_SHA.zip \
#           --source .

#     # (6) S3 버킷에 있는 파일을 대상으로 CodeDeploy 실행
#     - name: Deploy to AWS EC2 from S3
#       run: |
#         aws deploy create-deployment \
#           --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
#           --deployment-config-name CodeDeployDefault.AllAtOnce \
#           --deployment-group-name ${{ env.CODE_DEPLOY_DEPLOYMENT_GROUP_NAME }} \
#           --s3-location bucket=$S3_BUCKET_NAME,key=$GITHUB_SHA.zip,bundleType=zip
