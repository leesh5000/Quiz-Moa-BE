name: Deploy to Amazon EC2

on:
  push:
    branches:
      - main

env:
  AWS_REGION: ap-northeast-2
  CODE_DEPLOY_APPLICATION_NAME: quiz-codedeploy
  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: quiz-codedeploy-temp

permissions:
  contents: read

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'corretto'
        java-version: '17'

    - name: add permission to gradlew
      run: chmod +x ./gradlew
      shell: bash

    - name: aws configure
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_ACCESS_KEY_SECRET }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: build docker file and setting deploy files
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: quiz
        IMAGE_TAG: ${{ github.sha }}
        JASYPT_ENCRYPTOR_PASSWORD: ${{ secrets.JASYPT_ENCRYPTOR_PASSWORD }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        mkdir scripts
        touch scripts/deploy.sh
        AWS_REGION=${{ env.AWS_REGION }} && $ echo "aws ecr get-login-password --region "$AWS_REGION" | docker login --username AWS --password-stdin $ECR_REGISTRY" >> scripts/deploy.sh
        echo "docker pull $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> scripts/deploy.sh
        PASSWORD=$JASYPT_ENCRYPTOR_PASSWORD && echo "docker run -p 8080:8080 -e JASYPT_ENCRYPTOR_PASSWORD="$PASSWORD" -d --restart always --name quiz-api-server $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> scripts/deploy.sh

    - name: upload to s3
      env:
        IMAGE_TAG: ${{ github.sha }}
        S3_BUCKET_NAME: quiz-github-actions
      run: |
        zip -r deploy-$IMAGE_TAG.zip ./scripts appspec.yml
        aws s3 cp --region $AWS_REGION --acl private ./deploy-$IMAGE_TAG.zip s3://$S3_BUCKET_NAME

#    - name: start deploy
#      env:
#        IMAGE_TAG: ${{ github.sha }}
#      run: |
#        aws deploy create-deployment --application-name csbroker-dev-api-codedeploy \
#        --deployment-config-name CodeDeployDefault.OneAtATime \
#        --deployment-group-name csbroker-dev-api \
#        --s3-location bucket=cs-broker-bucket,bundleType=zip,key=deploy-$IMAGE_TAG.zip