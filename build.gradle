plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.1'
	id 'io.spring.dependency-management' version '1.1.0'
	// adoc 파일 변환, build 디렉토리에 복사를 위한 플러그인
	id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

group = 'com.leesh'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
	mavenCentral()
}

// -plain.jar 제거
jar {
	enabled = false
}

ext {

	// OpenFeign 사용을 위한 버전 설정
	set('springCloudVersion', "2022.0.0")

	// Spring Rest Docs 사용을 위한 스니펫 생성 디렉토리 설정
	set('snippetsDir', file("build/generated-snippets"))
}

dependencies {

	// OpenFeign Start
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign:4.0.0'
	// OpenFeign End

	// Spring Rest Docs Start
	implementation 'org.springframework.boot:spring-boot-starter'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
	// Spring Rest Docs End

	// H2 Database
	runtimeOnly 'com.h2database:h2:2.1.214'

	// Lombok Start
	compileOnly 'org.projectlombok:lombok:1.18.24'
	annotationProcessor 'org.projectlombok:lombok:1.18.24'
	// Lombok End

	// Spring Validation
	implementation 'org.springframework.boot:spring-boot-starter-validation:3.0.1'

	// Spring Data Jpa
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa:3.0.1'

	// Spring Boot Start
	implementation 'org.springframework.boot:spring-boot-starter-web:3.0.1'
	testImplementation 'org.springframework.boot:spring-boot-starter-test:3.0.1'
	// Spring Boot End

	//	JWT START
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'
	// JWT END

	// Spring Security Start
	implementation 'org.springframework.boot:spring-boot-starter-security:3.0.1'
	testImplementation 'org.springframework.security:spring-security-test:6.0.0'
	// Spring Security End

	// Jasypt Start
	implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.5'
	// Jasypt End

	// XSS Protect Start
	implementation  'org.apache.commons:commons-text:1.10.0'
	// XSS Protect End

	// Spring AOP Start
	implementation 'org.springframework.boot:spring-boot-starter-aop:3.0.1'
	// Spring AOP End

	// Maria DB client Start
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	// Maria DB client End

	// queryDSL 설정
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"
	// queryDSL 설정

	// MyBatis Start
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.1'
	// MyBatis End

}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

// Asciidoctor 설정 시작
tasks.named('test') {
	useJUnitPlatform()
	outputs.dir snippetsDir
}

tasks.named('asciidoctor') {
	inputs.dir snippetsDir
	dependsOn test
}

asciidoctor.doFirst {
	// 기존에 존재하는 문서 삭제
	delete file('src/main/resources/static/docs')
}

tasks.register('copyDocument', Copy) {
	dependsOn asciidoctor
	from file("build/docs/asciidoc")
	into file("src/main/resources/static/docs")
}

build {
	dependsOn copyDocument
}
// Asciidoctor 설정 끝

// Querydsl 설정 시작
clean {
	delete file('src/main/generated') // 인텔리제이 Annotation processor 생성물 생성 위치
}
// Querydsl 설정 끝
